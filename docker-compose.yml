version: "3"
services:
  ui:
    build: ./app
    ports:
      - "5173:5173"
    links:
      - nodeapp
    depends_on:
      - nodeapp
  nodeapp:
    container_name: node_docker
    restart: always
    build: ./server
    env_file: .env
    ports:
      - "4500:4500"
    links:
      - mongo1
    depends_on:
      - mongo1
    environment:
      WAIT_HOSTS: mongodb:27017
    networks:
      - node-webapp-network
  mongo1:
    container_name: mongo1
    image: mongo:4.4
    volumes:
      - ~/mongors/data1:/data/db
      - ./rs-init.sh:/scripts/rs-init.sh
    networks:
      - node-webapp-network
    ports:
      - 27021:27017
    links:
      - mongo2
      - mongo3
    restart: always
    entrypoint: [ "/usr/bin/mongod", "--bind_ip_all", "--replSet", "dbrs" ]
  mongo2:
    container_name: mongo2
    image: mongo:4.4
    volumes:
      - ~/mongors/data2:/data/db
    networks:
      - node-webapp-network
    ports:
      - 27022:27017
    restart: always
    entrypoint: [ "/usr/bin/mongod", "--bind_ip_all", "--replSet", "dbrs" ]
  mongo3:
    container_name: mongo3
    image: mongo:4.4
    volumes:
      - ~/mongors/data3:/data/db
    networks:
      - node-webapp-network
    ports:
      - 27023:27017
    restart: always
    entrypoint: [ "/usr/bin/mongod", "--bind_ip_all", "--replSet", "dbrs" ]

networks:
  node-webapp-network:
    driver: bridge